1. .tim文件
    索引文件.tim又称为 Term Dictionary，所以在读取阶段，我们是先通过读取索引文件.tim来得到在索引文件.doc、.pos、pay的信息。

2. 压缩
    如果平均后缀长度大于2且公共前缀长度大于2，会对后缀字节数组进行压缩。
    如果平均后缀长度大于2，会先尝试用LZ4压缩算法压缩，如果压缩后大小小于原来的3/4，压缩成功；否则，尝试下面的步骤。
    如果LZ4没有压缩成功，尝试用LowercaseAsciiCompression算法压缩（该算法对[0x1F,0x3F) or [0x5F,0x7F) 范围，即[31, 63)或[95, 127), 包含所有的数字，小写
字母，点，中划线和下划线, 压缩效果非常好）。如果压缩成功，保存；否则，使用原后缀字节数组。

3. SingletonDocId
    termStats中会保存singletonCount。
    termMetadata中会保存singletonCount。

4. termMetadata
    lastPosBlockOffset: prox个数不是128的倍数，最后一部分会使用VIntBlock保存在pos文件中，保存lastPosBlockOffset指向VIntBlock开始的FP

5. outerNode VS innerNode
    outerNode指只包含pendingTerm的PendingBlock，innerNode指至少包含一个pendingBlock的pendingBlock。
    innerNode中的PendingBlock不会保存termStats和termMetadata，会在SuffixLength中保存跳转到对应block的offset。
    通过Token区分是outerNode，innerNode

6. 优化点
    保存suffixLength时，如果所有的suffixLength都相等(不超过1byte)，只会保存第一个byte。【针对结构化数据，比如id】

@startuml
json ".tim File Layout" as J {
   "Header":[
      {"HeaderMagic\t": "[Int] 0x3fd76c17"},
      {"Codec\t\t": "[String] BlockTreeTermsDict"},
      {"Version\t\t": "[Int] 0"},
      {"Id\t\t\t": "[16 Bytes] random id"},
      {"SuffixLength\t": "[Byte] 0x0A"},
      {"Suffix\t\t": "[Bytes] Lucene90_0"}
   ],
   "Content":[
      {"FieldA\t": [
         {"PostingsHeader\t": "..."},
         {"NodeBlocks\t\t": [
            {"OuterNode\t": [
               {"EntryCountCode\t": "[VInt] EntryCountCode << 1 | 1 if isLast else 0"},
               {"Token\t\t\t": "[VLong] sumSuffixBytesLen << 3 | 0x04 if outerNode else 0 | compressionAlg.code"},
               {"SuffixBytes [Bytes]\t": [
                  "term1Suffix",
                  "term2Suffix",
                  "..."
               ]},
               {"SuffixLengths\t\t": [
                  {"SuffixLengthsLen\t\t": "[VInt] len << 1 | 1 if allByteEqual else 0"},
                  {"SuffixLengths [VInts]\t": [
                     "term1SuffixLen",
                     "term2SuffixLen",
                     "..."
                  ]}
               ]},
               {"TermStats\t\t": [
                  {"TermStatsLen\t\t\t": "[VInt]"},
                  {"TermStats\t\t\t": [
                     {"term1Stat\t\t": [
                        {"docFreq\t\t\t": "[VInt] df << 1"},
                        {"totalTermFreq\t": "[VLong] ttf - df\t"}
                     ]},
                     {"term2Stat\t\t": [
                        {"docFreq\t\t\t": "[VInt] df << 1"},
                        {"totalTermFreq\t": "[VLong] ttf - df"}
                     ]},
                     {"singletonCount\t": "[VInt] ((singletonCount - 1) << 1) | 1"},
                     {"term5Stat\t\t": [
                        {"docFreq\t\t\t": "[VInt] df << 1"},
                        {"totalTermFreq\t": "[VLong] ttf - df"}
                     ]},
                     "..."
                  ]}
               ]},
               {"TermMetadatas\t": [
                  {"MetadataSize\t\t\t": "[VInt]"},
                  {"TermMetadatas\t\t": [
                     {"term1Meta\t": [
                        {"docStartFP\t\t": "[VLong] delta"},
                        {"SingletonDocId\t": "[VInt] optional\t"},
                        {"posStartFP\t\t": "[VLong] delta"},
                        {"payStartFP\t\t": "[VLong] delta"},
                        {"lastPosBlockOffset\t": "[VLong]"},
                        {"skipOffset\t\t": "[VLong]"}
                     ]},
                     {"term2Meta\t": [
                        {"docStartFP\t\t": "[VLong] delta"},
                        {"SingletonDocId\t": "[VInt] optional\t"},
                        {"posStartFP\t\t": "[VLong] delta"},
                        {"payStartFP\t\t": "[VLong] delta"},
                        {"lastPosBlockOffset\t": "[VLong]"},
                        {"skipOffset\t\t": "[VLong]"}
                     ]},
                     "..."
                  ]}
               ]}
            ]},
            {"InnerNode\t": [
               {"EntryCountCode\t": "[VInt] EntryCountCode << 1 | 1 if isLast else 0"},
               {"Token\t\t\t": "[VLong] sumSuffixBytesLen << 3 | 0x04 if outerNode else 0 | compressionAlg.code"},
               {"SuffixBytes [Bytes]\t": [
                  "term1Suffix",
                  "term2Suffix",
                  "block1Suffix",
                  "term3Suffix",
                  "..."
               ]},
               {"SuffixLengths\t\t": [
                  {"SuffixLengthsLen\t\t": "[VInt] len << 1 | 1 if allByteEqual else 0"},
                  {"SuffixLengths [VInts]\t": [
                     {"term1SuffixLen\t": "term1SuffixLen << 1"},
                     {"term2SuffixLen\t": "term2SuffixLen << 1"},
                     {"block1SuffixLen\t": "block1SuffixLen << 1 | 1"},
                     {"block1_Offset\t\t": "startFP - block.fp"},
                     {"term3SuffixLen\t": "term3SuffixLen << 1"},
                     "..."
                  ]}
               ]},
               {"TermStats\t\t": [
                  {"TermStatsLen\t\t\t": "[VInt]"},
                  {"TermStats\t\t\t": [
                     {"term1Stat\t\t": [
                        {"docFreq\t\t\t": "[VInt] df << 1"},
                        {"totalTermFreq\t": "[VLong] ttf - df\t"}
                     ]},
                     {"term2Stat\t\t": [
                        {"docFreq\t\t\t": "[VInt] df << 1"},
                        {"totalTermFreq\t": "[VLong] ttf - df"}
                     ]},
                     {"term3Stat\t\t": [
                        {"docFreq\t\t\t": "[VInt] df << 1"},
                        {"totalTermFreq\t": "[VLong] ttf - df"}
                     ]},
                     {"singletonCount\t": "[VInt] ((singletonCount - 1) << 1) | 1"},
                     {"term7Stat\t\t": [
                        {"docFreq\t\t\t": "[VInt] df << 1"},
                        {"totalTermFreq\t": "[VLong] ttf - df"}
                     ]},
                     "..."
                  ]}
               ]},
               {"TermMetadatas\t": [
                  {"MetadataSize\t\t\t": "[VInt]"},
                  {"TermMetadatas\t\t": [
                     {"term1Meta\t": [
                        {"docStartFP\t\t": "[VLong] delta"},
                        {"SingletonDocId\t": "[VInt] optional\t"},
                        {"posStartFP\t\t": "[VLong] delta"},
                        {"payStartFP\t\t": "[VLong] delta"},
                        {"lastPosBlockOffset\t": "[VLong]"},
                        {"skipOffset\t\t": "[VLong]"}
                     ]},
                     {"term2Meta\t": [
                        {"docStartFP\t\t": "[VLong] delta"},
                        {"SingletonDocId\t": "[VInt] optional\t"},
                        {"posStartFP\t\t": "[VLong] delta"},
                        {"payStartFP\t\t": "[VLong] delta"},
                        {"lastPosBlockOffset\t": "[VLong]"},
                        {"skipOffset\t\t": "[VLong]"}
                     ]},
                     {"term3Meta\t": [
                        {"docStartFP\t\t": "[VLong] delta"},
                        {"SingletonDocId\t": "[VInt] optional\t"},
                        {"posStartFP\t\t": "[VLong] delta"},
                        {"payStartFP\t\t": "[VLong] delta"},
                        {"lastPosBlockOffset\t": "[VLong]"},
                        {"skipOffset\t\t": "[VLong]"}
                     ]},
                     "..."
                  ]}
               ]}
            ]},
            {"OuterNode\t": "..."},
            "..."
         ]}
      ]},
      {"FieldB\t":["..."]},
      "..."
   ],
   "Footer":[
      {"FooterMagic\t": "[Int] 0xc02893e8"},
      {"Zero\t\t\t": "[Int] 0"},
      {"CRC\t\t\t": "[Long] crc"}
   ]
}
@enduml
